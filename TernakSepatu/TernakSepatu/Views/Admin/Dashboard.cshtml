@{
    ViewData["Title"] = "Admin";
}

@{
    Layout = "~/Views/Shared/Admin/_Layout.cshtml";
}

@if (ViewData["Notification"] != null)
{
    <div class="alert alert-info" role="alert">
        @ViewData["Notification"]
        @if (ViewData["PendingProofsCount"] != null)
        {
            <a href="/QrPaymentAdmin/Approve">Lihat @ViewData["PendingProofsCount"] bukti pembayaran yang masih menunggu</a>
        }
    </div>
}

<div class="row">
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <canvas id="productChart"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <canvas id="brandChart"></canvas>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <canvas id="orderChart"></canvas>
            </div>
        </div>
    </div>
</div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // JavaScript code to initialize and render the charts
        // Use ViewBag.ProductCount, ViewBag.BrandCount, and ViewBag.ConfirmedOrderCount to retrieve the counts from the server

        // Example code for initializing and rendering charts using Chart.js
        var productChartCanvas = document.getElementById('productChart').getContext('2d');
        var productChart = new Chart(productChartCanvas, {
            type: 'bar',
            data: {
                labels: ['Produk'],
                datasets: [{
                    label: 'Jumlah Produk',
                    data: [@ViewBag.ProductCount],
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        // Similar code for brand and order charts
        var brandChartCanvas = document.getElementById('brandChart').getContext('2d');
        var brandChart = new Chart(brandChartCanvas, {
            type: 'bar',
            data: {
                labels: ['Merk'],
                datasets: [{
                    label: 'Jumlah Brand',
                    data: [@ViewBag.BrandCount],
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });

        var orderChartCanvas = document.getElementById('orderChart').getContext('2d');
        var orderChart = new Chart(orderChartCanvas, {
            type: 'bar',
            data: {
                labels: ['Orderan'],
                datasets: [{
                    label: 'Jumlah Orderan Yang terkonfirmasi',
                    data: [@ViewBag.ConfirmedOrderCount],
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
