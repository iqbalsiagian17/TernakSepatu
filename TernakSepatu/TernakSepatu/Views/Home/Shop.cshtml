@using Microsoft.AspNetCore.Identity
@using TernakSepatu.Areas.Identity.Data
@{
    ViewData["Title"] = "Home Page";
}

@{
    Layout = "~/Views/Shared/Costumer/_Layout.cshtml";
}

@{
    var context = ViewData.Model as TernakSepatu.Data.TernakSepatuDBContext;
}




@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

    <style>
    .img-height {
        height: 400px; /* Atur tinggi tetap untuk semua gambar */
        object-fit: cover; /* Pastikan gambar memenuhi seluruh area gambar dengan mempertahankan aspek rasio */
    }
    </style>

@section Navbar {
    @Html.Partial("~/Views/Shared/Costumer/Partial/_Navbar2.cshtml")
}

<!-- Page Header Start -->
<div class="container-fluid">
    <div id="randomBackground" class="row px-xl-5" style="background-image: url(''); background-size: contain;">
        <div class="d-flex flex-column align-items-center justify-content-center" style="min-height: 300px">
            <div class="d-inline-flex">
                @if (!string.IsNullOrEmpty(ViewData["BrandName"]?.ToString()))
                {
                    <h5>@ViewData["BrandName"]</h5>
                }
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Daftar gambar yang akan digunakan
        var images = ['/Images/Pelengkap/adidas.jpg', '/Images/Pelengkap/nike.jpg'];

        var container = document.getElementById('randomBackground');

        // Ambil nama brand dari ViewData jika ada
        var brandName = "@ViewData["BrandName"]";

        // Cari gambar yang sesuai dengan nama brand
        var imageName;
        switch (brandName) {
            case "Adidas":
                imageName = '/Images/Pelengkap/adidas.jpg';
                break;
            case "Nike":
                imageName = '/Images/Pelengkap/nike.jpg';
                break;
            case "New Balance":
                imageName = '/Images/Pelengkap/newbalance.jpg';
                break;

            default:
                // Jika tidak ada brand name dari ViewData, pilih gambar secara acak
                imageName = images[Math.floor(Math.random() * images.length)];
                break;
        }

        // Set background image URL
        container.style.backgroundImage = 'url(' + imageName + ')';
    });
</script>



<!-- Page Header End -->

            <!-- Shop Start -->
            <div class="container-fluid pt-5">
                <div class="row px-xl-5">
                    <!-- Shop Sidebar Start -->
                    <div class="col-lg-3 col-md-12">
                        <!-- Price Start -->
                        <div class="border-bottom mb-4 pb-4">
                            <h5 class="font-weight-semi-bold mb-4">Filter by price</h5>
                            <form>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" checked id="price-all">
                                    <label class="custom-control-label" for="price-all">All Price</label>
                                    <span class="badge border font-weight-normal">1000</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="price-1">
                                    <label class="custom-control-label" for="price-1">$0 - $100</label>
                                    <span class="badge border font-weight-normal">150</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="price-2">
                                    <label class="custom-control-label" for="price-2">$100 - $200</label>
                                    <span class="badge border font-weight-normal">295</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="price-3">
                                    <label class="custom-control-label" for="price-3">$200 - $300</label>
                                    <span class="badge border font-weight-normal">246</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="price-4">
                                    <label class="custom-control-label" for="price-4">$300 - $400</label>
                                    <span class="badge border font-weight-normal">145</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                                    <input type="checkbox" class="custom-control-input" id="price-5">
                                    <label class="custom-control-label" for="price-5">$400 - $500</label>
                                    <span class="badge border font-weight-normal">168</span>
                                </div>
                            </form>
                        </div>
                        <!-- Price End -->
                        <!-- Color Start -->
                        <div class="border-bottom mb-4 pb-4">
                            <h5 class="font-weight-semi-bold mb-4">Filter by color</h5>
                            <form>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" checked id="color-all">
                                    <label class="custom-control-label" for="price-all">All Color</label>
                                    <span class="badge border font-weight-normal">1000</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="color-1">
                                    <label class="custom-control-label" for="color-1">Black</label>
                                    <span class="badge border font-weight-normal">150</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="color-2">
                                    <label class="custom-control-label" for="color-2">White</label>
                                    <span class="badge border font-weight-normal">295</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="color-3">
                                    <label class="custom-control-label" for="color-3">Red</label>
                                    <span class="badge border font-weight-normal">246</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" id="color-4">
                                    <label class="custom-control-label" for="color-4">Blue</label>
                                    <span class="badge border font-weight-normal">145</span>
                                </div>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                                    <input type="checkbox" class="custom-control-input" id="color-5">
                                    <label class="custom-control-label" for="color-5">Green</label>
                                    <span class="badge border font-weight-normal">168</span>
                                </div>
                            </form>
                        </div>
                        <!-- Color End -->
                        <!-- Size Start -->
                        <div class="mb-5">
                            <h5 class="font-weight-semi-bold mb-4">Filter by size</h5>
                            <form>
                                <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                    <input type="checkbox" class="custom-control-input" checked id="size-all">
                                    <label class="custom-control-label" for="size-all">All Size</label>
                                    <span class="badge border font-weight-normal">1000</span>
                                </div>
                            </form>
                        </div>
                        <!-- Size End -->
                    </div>
                    <!-- Shop Sidebar End -->
                    <!-- Shop Product Start -->
                    <div class="col-lg-9 col-md-12">
                        <div class="row pb-3">
                            <div class="col-12 pb-1">
                    @if (!string.IsNullOrEmpty(ViewData["CategoryName"]?.ToString()))
                    {
                        <h5>Category: @ViewData["CategoryName"]</h5>
                    }
                    else if (!string.IsNullOrEmpty(ViewData["BrandName"]?.ToString()))
                    {
                        <h5>Brand: @ViewData["BrandName"]</h5>
                    }
                                <div class="d-flex align-items-center justify-content-between mb-4">
                                    <form action="">
                                        <div class="input-group">
                                            <input type="text" class="form-control" placeholder="Search by name">
                                            <div class="input-group-append">
                                                <span class="input-group-text bg-transparent text-primary">
                                                    <i class="fa fa-search"></i>
                                                </span>
                                            </div>
                                        </div>
                                    </form>
                                    <div class="dropdown ml-4">
                                        <button class="btn border dropdown-toggle" type="button" id="triggerId" data-toggle="dropdown" aria-haspopup="true"
                                                aria-expanded="false">
                                            Sort by
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="triggerId">
                                            <a class="dropdown-item" href="#">Latest</a>
                                            <a class="dropdown-item" href="#">Popularity</a>
                                            <a class="dropdown-item" href="#">Best Rating</a>
                                        </div>
                                    </div>
                                </div>
                            </div>


                @if (ViewData["Products"] == null || !(ViewData["Products"] is List<Product> products) || products.Count == 0)
                {
                    <p>Produk Sedang Kosong, Maaf</p>
                }
                else
                {
                    @foreach (var product in products)
                    {
                        <div class="col-lg-4 col-md-6 col-sm-12 pb-1">
                            <div class="card product-item border-0 mb-4">
                                <div class="card-header product-img position-relative overflow-hidden bg-transparent border p-0">
                                    <img class="img-fluid w-100 img-height" src="~/Images/Product/@(product.ImageURL.Split(',')[0])" alt="">
                                </div>
                                <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                                    <h6 class="text-truncate mb-3">@product.ProductName</h6>
                                    <div class="d-flex justify-content-center">
                                        <h6>@string.Format("{0:C}", product.Price)</h6>
                                        @if (product.Discount > 0)
                                        {
                                            <h6 class="text-muted ml-2"><del>@string.Format("{0:C}", product.Discount)</del></h6>
                                        }
                                    </div>
                                </div>
                                <div class="card-footer d-flex justify-content-between bg-light border">
                                    @if (product.Stock == "Habis")
                                    {
                                        <div class="text-center w-100">
                                            <p class="text-muted mb-0 bg-danger">Sold Out Kilat!</p>
                                        </div>
                                    }
                                    else
                                    {
                                    <a href="@Url.Action("Detail", "Home", new { id = product.Id })" class="btn btn-sm text-dark p-0"><i class="fas fa-eye text-primary mr-1"></i>View Detail</a>
                                    <a href="#" class="btn btn-sm text-dark p-0 btn-add-to-wishlist" data-product-id="@product.Id">
                                        <i class="fas fa-heart text-primary mr-1"></i>
                                    </a>


                                    <a href="#" class="btn btn-sm text-dark p-0 btn-add-to-cart" data-product-id="@product.Id">
                                        <i class="fas fa-shopping-cart text-primary mr-1"></i>Add To Cart
                                    </a>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                }




                           @*  <div class="col-12 pb-1">
                                <nav aria-label="Page navigation">
                                    <ul class="pagination justify-content-center mb-3">
                                        <li class="page-item disabled">
                                            <a class="page-link" href="#" aria-label="Previous">
                                                <span aria-hidden="true">&laquo;</span>
                                                <span class="sr-only">Previous</span>
                                            </a>
                                        </li>
                                        <li class="page-item active"><a class="page-link" href="#">1</a></li>
                                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                                        <li class="page-item">
                                            <a class="page-link" href="#" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                                <span class="sr-only">Next</span>
                                            </a>
                                        </li>
                                    </ul>
                                </nav>
                            </div> *@

                        </div>
                    </div>
                    <!-- Shop Product End -->
                </div>
            </div>
            <!-- Shop End -->





<!-- Link to SweetAlert Library JS (you need to include this in your project) -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- JavaScript Code to Handle Click Event and Display Notification -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const addToCartButtons = document.querySelectorAll('.btn-add-to-cart');

        addToCartButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();

                const productId = this.getAttribute('data-product-id');

                // Simulate adding the product to the cart with an AJAX request
                // Replace this with your actual logic to add the product to the cart
                // For demonstration, we'll just show a success notification
                Swal.fire({
                    icon: 'success',
                    title: 'Dimasukkan Ke Keranjang Anda',
                    text: 'The product has been successfully added to your cart.',
                    showConfirmButton: false,
                    timer: 1500
                });
            });
        });
    });
</script>

<!-- JavaScript Code to Handle Click Event and Display Notification -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const addToWishlistButtons = document.querySelectorAll('.btn-add-to-wishlist');

        addToWishlistButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();

                const productId = this.getAttribute('data-product-id');

                // Simulate adding the product to the wishlist with an AJAX request
                // Replace this with your actual logic to add the product to the wishlist
                // For demonstration, we'll just show a success notification
                Swal.fire({
                    icon: 'success',
                    title: 'Dimasukkan Ke Daftar Wishlist Anda',
                    text: 'The product has been successfully added to your wishlist.',
                    showConfirmButton: false,
                    timer: 1500
                });
            });
        });
    });
</script>